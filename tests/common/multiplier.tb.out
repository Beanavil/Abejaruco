#! /usr/bin/vvp
:ivl_version "11.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
S_0x557fde9755e0 .scope module, "Multiplier_tb" "Multiplier_tb" 2 8;
 .timescale 0 0;
v0x557fde9abc20_0 .var "a", 3 0;
v0x557fde9abce0_0 .var "b", 3 0;
v0x557fde9abdb0_0 .net "result", 7 0, L_0x557fde9afee0;  1 drivers
S_0x557fde96e450 .scope module, "multiplier" "Multiplier" 2 13, 3 3 0, S_0x557fde9755e0;
 .timescale 0 0;
    .port_info 0 /INPUT 4 "a";
    .port_info 1 /INPUT 4 "b";
    .port_info 2 /OUTPUT 8 "result";
P_0x557fde968d80 .param/l "WIDTH" 0 3 3, +C4<00000000000000000000000000000100>;
v0x557fde9ab450_0 .net *"_ivl_2", 2 0, L_0x557fde9adf70;  1 drivers
v0x557fde9ab550_0 .net *"_ivl_5", 2 0, L_0x557fde9afd50;  1 drivers
v0x557fde9ab630_0 .net *"_ivl_8", 2 0, L_0x557fde9afdf0;  1 drivers
v0x557fde9ab720_0 .net "a", 3 0, v0x557fde9abc20_0;  1 drivers
v0x557fde9ab800_0 .net "b", 3 0, v0x557fde9abce0_0;  1 drivers
RS_0x7fe55499fcd8 .resolv tri, L_0x557fde9aded0, L_0x557fde9afc20;
v0x557fde9ab930_0 .net8 "carry_out", 0 0, RS_0x7fe55499fcd8;  2 drivers
RS_0x7fe5549a0c08 .resolv tri, L_0x557fde9adde0, L_0x557fde9afb80;
v0x557fde9aba20_0 .net8 "previous_stage", 3 0, RS_0x7fe5549a0c08;  2 drivers
v0x557fde9abae0_0 .net "result", 7 0, L_0x557fde9afee0;  alias, 1 drivers
L_0x557fde9ad620 .part v0x557fde9abce0_0, 0, 1;
L_0x557fde9adb00 .part v0x557fde9abce0_0, 1, 1;
L_0x557fde9adde0 .part/pv L_0x557fde9adf70, 1, 3, 4;
L_0x557fde9af820 .part v0x557fde9abce0_0, 2, 1;
L_0x557fde9afb80 .part/pv L_0x557fde9afd50, 1, 3, 4;
L_0x557fde9afdf0 .part L_0x557fde9afee0, 0, 3;
L_0x557fde9afee0 .concat [ 3 4 1 0], L_0x557fde9afdf0, RS_0x7fe5549a0c08, RS_0x7fe55499fcd8;
S_0x557fde965930 .scope generate, "bit_loop[0]" "bit_loop[0]" 3 19, 3 19 0, S_0x557fde96e450;
 .timescale 0 0;
P_0x557fde9664b0 .param/l "i" 0 3 19, +C4<00>;
L_0x557fde9ad9b0 .functor AND 4, v0x557fde9abc20_0, L_0x557fde9ad870, C4<1111>, C4<1111>;
L_0x557fde9adce0 .functor AND 4, v0x557fde9abc20_0, L_0x557fde9adba0, C4<1111>, C4<1111>;
v0x557fde9a5210_0 .net *"_ivl_0", 0 0, L_0x557fde9ad620;  1 drivers
v0x557fde9a5310_0 .net *"_ivl_1", 3 0, L_0x557fde9ad6c0;  1 drivers
v0x557fde9a53f0_0 .net *"_ivl_13", 0 0, L_0x557fde9adb00;  1 drivers
v0x557fde9a54b0_0 .net *"_ivl_14", 3 0, L_0x557fde9adba0;  1 drivers
L_0x7fe5549560a8 .functor BUFT 1, C4<000>, C4<0>, C4<0>, C4<0>;
v0x557fde9a5590_0 .net *"_ivl_17", 2 0, L_0x7fe5549560a8;  1 drivers
L_0x7fe554956018 .functor BUFT 1, C4<000>, C4<0>, C4<0>, C4<0>;
v0x557fde9a56c0_0 .net *"_ivl_4", 2 0, L_0x7fe554956018;  1 drivers
v0x557fde9a57a0_0 .net *"_ivl_5", 3 0, L_0x557fde9ad870;  1 drivers
v0x557fde9a5880_0 .net *"_ivl_7", 2 0, L_0x557fde9ad780;  1 drivers
L_0x7fe554956060 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x557fde9a5960_0 .net *"_ivl_9", 0 0, L_0x7fe554956060;  1 drivers
L_0x557fde9ad6c0 .concat [ 1 3 0 0], L_0x557fde9ad620, L_0x7fe554956018;
L_0x557fde9ad780 .part L_0x557fde9ad6c0, 1, 3;
L_0x557fde9ad870 .concat [ 3 1 0 0], L_0x557fde9ad780, L_0x7fe554956060;
L_0x557fde9adba0 .concat [ 1 3 0 0], L_0x557fde9adb00, L_0x7fe5549560a8;
L_0x557fde9aded0 .part L_0x557fde9affd0, 3, 1;
L_0x557fde9adf70 .part L_0x557fde9affd0, 0, 3;
S_0x557fde968200 .scope module, "adder_instance" "Adder" 3 22, 4 3 0, S_0x557fde965930;
 .timescale 0 0;
    .port_info 0 /INPUT 4 "a";
    .port_info 1 /INPUT 4 "b";
    .port_info 2 /INPUT 1 "carry_in";
    .port_info 3 /OUTPUT 4 "sum";
    .port_info 4 /OUTPUT 1 "carry_out";
P_0x557fde9680a0 .param/l "WIDTH" 0 4 3, +C4<00000000000000000000000000000100>;
o0x7fe55499fbe8 .functor BUFZ 1, C4<z>; HiZ drive
; Elide local net with no drivers, v0x557fde9a4a50_0 name=_ivl_22
o0x7fe55499fc18 .functor BUFZ 1, C4<z>; HiZ drive
; Elide local net with no drivers, v0x557fde9a4b30_0 name=_ivl_25
v0x557fde9a4c10_0 .net "a", 3 0, L_0x557fde9ad9b0;  1 drivers
v0x557fde9a4cd0_0 .net "b", 3 0, L_0x557fde9adce0;  1 drivers
v0x557fde9a4db0_0 .net "carry", 3 0, L_0x557fde9b0070;  1 drivers
L_0x7fe5549560f0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x557fde9a4ee0_0 .net "carry_in", 0 0, L_0x7fe5549560f0;  1 drivers
v0x557fde9a4fd0_0 .net8 "carry_out", 0 0, RS_0x7fe55499fcd8;  alias, 2 drivers
v0x557fde9a5090_0 .net "sum", 3 0, L_0x557fde9affd0;  1 drivers
L_0x557fde9ac350 .part L_0x557fde9ad9b0, 0, 1;
L_0x557fde9ac480 .part L_0x557fde9adce0, 0, 1;
L_0x557fde9ac9d0 .part L_0x557fde9ad9b0, 1, 1;
L_0x557fde9acb00 .part L_0x557fde9adce0, 1, 1;
L_0x557fde9acc30 .part L_0x557fde9b0070, 0, 1;
L_0x557fde9ad200 .part L_0x557fde9ad9b0, 2, 1;
L_0x557fde9ad370 .part L_0x557fde9adce0, 2, 1;
L_0x557fde9ad4a0 .part L_0x557fde9b0070, 1, 1;
L_0x557fde9affd0 .concat [ 1 1 1 1], L_0x557fde9ac0a0, L_0x557fde9ac6d0, L_0x557fde9acf00, o0x7fe55499fbe8;
L_0x557fde9b0070 .concat [ 1 1 1 1], L_0x557fde9ac2c0, L_0x557fde9ac940, L_0x557fde9ad170, o0x7fe55499fc18;
S_0x557fde9701d0 .scope generate, "bit_loop[0]" "bit_loop[0]" 4 14, 4 14 0, S_0x557fde968200;
 .timescale 0 0;
P_0x557fde963560 .param/l "i" 0 4 14, +C4<00>;
S_0x557fde972aa0 .scope module, "full_adder_instance" "Full_adder" 4 16, 5 5 0, S_0x557fde9701d0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "carry_in";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "carry_out";
L_0x557fde9ac2c0 .functor OR 1, L_0x557fde9abfc0, L_0x557fde9ac1a0, C4<0>, C4<0>;
v0x557fde9a1320_0 .net "a", 0 0, L_0x557fde9ac350;  1 drivers
v0x557fde9a13e0_0 .net "b", 0 0, L_0x557fde9ac480;  1 drivers
v0x557fde9a14b0_0 .net "carry_carry", 0 0, L_0x557fde9ac1a0;  1 drivers
v0x557fde9a15b0_0 .net "carry_in", 0 0, L_0x7fe5549560f0;  alias, 1 drivers
v0x557fde9a1680_0 .net "carry_out", 0 0, L_0x557fde9ac2c0;  1 drivers
v0x557fde9a1770_0 .net "operands_carry", 0 0, L_0x557fde9abfc0;  1 drivers
v0x557fde9a1810_0 .net "operands_sum", 0 0, L_0x557fde9abeb0;  1 drivers
v0x557fde9a1900_0 .net "sum", 0 0, L_0x557fde9ac0a0;  1 drivers
S_0x557fde9743d0 .scope module, "half_adder_carry" "Half_adder" 5 19, 6 3 0, S_0x557fde972aa0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x557fde9ac0a0 .functor XOR 1, L_0x557fde9abeb0, L_0x7fe5549560f0, C4<0>, C4<0>;
L_0x557fde9ac1a0 .functor AND 1, L_0x557fde9abeb0, L_0x7fe5549560f0, C4<1>, C4<1>;
v0x557fde96e5e0_0 .net "a", 0 0, L_0x557fde9abeb0;  alias, 1 drivers
v0x557fde970c20_0 .net "b", 0 0, L_0x7fe5549560f0;  alias, 1 drivers
v0x557fde96e2d0_0 .net "carry_out", 0 0, L_0x557fde9ac1a0;  alias, 1 drivers
v0x557fde966640_0 .net "sum", 0 0, L_0x557fde9ac0a0;  alias, 1 drivers
S_0x557fde9a0f50 .scope module, "half_adder_operands" "Half_adder" 5 12, 6 3 0, S_0x557fde972aa0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x557fde9abeb0 .functor XOR 1, L_0x557fde9ac350, L_0x557fde9ac480, C4<0>, C4<0>;
L_0x557fde9abfc0 .functor AND 1, L_0x557fde9ac350, L_0x557fde9ac480, C4<1>, C4<1>;
v0x557fde963d40_0 .net "a", 0 0, L_0x557fde9ac350;  alias, 1 drivers
v0x557fde966380_0 .net "b", 0 0, L_0x557fde9ac480;  alias, 1 drivers
v0x557fde963a30_0 .net "carry_out", 0 0, L_0x557fde9abfc0;  alias, 1 drivers
v0x557fde9a11c0_0 .net "sum", 0 0, L_0x557fde9abeb0;  alias, 1 drivers
S_0x557fde9a19d0 .scope generate, "bit_loop[1]" "bit_loop[1]" 4 14, 4 14 0, S_0x557fde968200;
 .timescale 0 0;
P_0x557fde9a1bd0 .param/l "i" 0 4 14, +C4<01>;
S_0x557fde9a1c90 .scope module, "full_adder_instance" "Full_adder" 4 16, 5 5 0, S_0x557fde9a19d0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "carry_in";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "carry_out";
L_0x557fde9ac940 .functor OR 1, L_0x557fde9ac640, L_0x557fde9ac860, C4<0>, C4<0>;
v0x557fde9a2b20_0 .net "a", 0 0, L_0x557fde9ac9d0;  1 drivers
v0x557fde9a2be0_0 .net "b", 0 0, L_0x557fde9acb00;  1 drivers
v0x557fde9a2cb0_0 .net "carry_carry", 0 0, L_0x557fde9ac860;  1 drivers
v0x557fde9a2db0_0 .net "carry_in", 0 0, L_0x557fde9acc30;  1 drivers
v0x557fde9a2e80_0 .net "carry_out", 0 0, L_0x557fde9ac940;  1 drivers
v0x557fde9a2f70_0 .net "operands_carry", 0 0, L_0x557fde9ac640;  1 drivers
v0x557fde9a3010_0 .net "operands_sum", 0 0, L_0x557fde9ac5b0;  1 drivers
v0x557fde9a3100_0 .net "sum", 0 0, L_0x557fde9ac6d0;  1 drivers
S_0x557fde9a1ef0 .scope module, "half_adder_carry" "Half_adder" 5 19, 6 3 0, S_0x557fde9a1c90;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x557fde9ac6d0 .functor XOR 1, L_0x557fde9ac5b0, L_0x557fde9acc30, C4<0>, C4<0>;
L_0x557fde9ac860 .functor AND 1, L_0x557fde9ac5b0, L_0x557fde9acc30, C4<1>, C4<1>;
v0x557fde9a2120_0 .net "a", 0 0, L_0x557fde9ac5b0;  alias, 1 drivers
v0x557fde9a2200_0 .net "b", 0 0, L_0x557fde9acc30;  alias, 1 drivers
v0x557fde9a22c0_0 .net "carry_out", 0 0, L_0x557fde9ac860;  alias, 1 drivers
v0x557fde9a2390_0 .net "sum", 0 0, L_0x557fde9ac6d0;  alias, 1 drivers
S_0x557fde9a2500 .scope module, "half_adder_operands" "Half_adder" 5 12, 6 3 0, S_0x557fde9a1c90;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x557fde9ac5b0 .functor XOR 1, L_0x557fde9ac9d0, L_0x557fde9acb00, C4<0>, C4<0>;
L_0x557fde9ac640 .functor AND 1, L_0x557fde9ac9d0, L_0x557fde9acb00, C4<1>, C4<1>;
v0x557fde9a2770_0 .net "a", 0 0, L_0x557fde9ac9d0;  alias, 1 drivers
v0x557fde9a2830_0 .net "b", 0 0, L_0x557fde9acb00;  alias, 1 drivers
v0x557fde9a28f0_0 .net "carry_out", 0 0, L_0x557fde9ac640;  alias, 1 drivers
v0x557fde9a29c0_0 .net "sum", 0 0, L_0x557fde9ac5b0;  alias, 1 drivers
S_0x557fde9a31d0 .scope generate, "bit_loop[2]" "bit_loop[2]" 4 14, 4 14 0, S_0x557fde968200;
 .timescale 0 0;
P_0x557fde9a33b0 .param/l "i" 0 4 14, +C4<010>;
S_0x557fde9a3470 .scope module, "full_adder_instance" "Full_adder" 4 16, 5 5 0, S_0x557fde9a31d0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "carry_in";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "carry_out";
L_0x557fde9ad170 .functor OR 1, L_0x557fde9ace20, L_0x557fde9ad090, C4<0>, C4<0>;
v0x557fde9a43a0_0 .net "a", 0 0, L_0x557fde9ad200;  1 drivers
v0x557fde9a4460_0 .net "b", 0 0, L_0x557fde9ad370;  1 drivers
v0x557fde9a4530_0 .net "carry_carry", 0 0, L_0x557fde9ad090;  1 drivers
v0x557fde9a4630_0 .net "carry_in", 0 0, L_0x557fde9ad4a0;  1 drivers
v0x557fde9a4700_0 .net "carry_out", 0 0, L_0x557fde9ad170;  1 drivers
v0x557fde9a47f0_0 .net "operands_carry", 0 0, L_0x557fde9ace20;  1 drivers
v0x557fde9a4890_0 .net "operands_sum", 0 0, L_0x557fde9acd60;  1 drivers
v0x557fde9a4980_0 .net "sum", 0 0, L_0x557fde9acf00;  1 drivers
S_0x557fde9a3700 .scope module, "half_adder_carry" "Half_adder" 5 19, 6 3 0, S_0x557fde9a3470;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x557fde9acf00 .functor XOR 1, L_0x557fde9acd60, L_0x557fde9ad4a0, C4<0>, C4<0>;
L_0x557fde9ad090 .functor AND 1, L_0x557fde9acd60, L_0x557fde9ad4a0, C4<1>, C4<1>;
v0x557fde9a39a0_0 .net "a", 0 0, L_0x557fde9acd60;  alias, 1 drivers
v0x557fde9a3a80_0 .net "b", 0 0, L_0x557fde9ad4a0;  alias, 1 drivers
v0x557fde9a3b40_0 .net "carry_out", 0 0, L_0x557fde9ad090;  alias, 1 drivers
v0x557fde9a3c10_0 .net "sum", 0 0, L_0x557fde9acf00;  alias, 1 drivers
S_0x557fde9a3d80 .scope module, "half_adder_operands" "Half_adder" 5 12, 6 3 0, S_0x557fde9a3470;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x557fde9acd60 .functor XOR 1, L_0x557fde9ad200, L_0x557fde9ad370, C4<0>, C4<0>;
L_0x557fde9ace20 .functor AND 1, L_0x557fde9ad200, L_0x557fde9ad370, C4<1>, C4<1>;
v0x557fde9a3ff0_0 .net "a", 0 0, L_0x557fde9ad200;  alias, 1 drivers
v0x557fde9a40b0_0 .net "b", 0 0, L_0x557fde9ad370;  alias, 1 drivers
v0x557fde9a4170_0 .net "carry_out", 0 0, L_0x557fde9ace20;  alias, 1 drivers
v0x557fde9a4240_0 .net "sum", 0 0, L_0x557fde9acd60;  alias, 1 drivers
S_0x557fde9a5a40 .scope generate, "bit_loop[1]" "bit_loop[1]" 3 19, 3 19 0, S_0x557fde96e450;
 .timescale 0 0;
P_0x557fde9a5c10 .param/l "i" 0 3 19, +C4<01>;
L_0x557fde9af9f0 .functor AND 4, v0x557fde9abc20_0, L_0x557fde9af950, C4<1111>, C4<1111>;
v0x557fde9ab1b0_0 .net *"_ivl_0", 0 0, L_0x557fde9af820;  1 drivers
v0x557fde9ab2b0_0 .net *"_ivl_1", 3 0, L_0x557fde9af950;  1 drivers
L_0x7fe554956138 .functor BUFT 1, C4<000>, C4<0>, C4<0>, C4<0>;
v0x557fde9ab390_0 .net *"_ivl_4", 2 0, L_0x7fe554956138;  1 drivers
L_0x557fde9af950 .concat [ 1 3 0 0], L_0x557fde9af820, L_0x7fe554956138;
L_0x557fde9afc20 .part L_0x557fde9b0260, 3, 1;
L_0x557fde9afd50 .part L_0x557fde9b0260, 0, 3;
S_0x557fde9a5cd0 .scope module, "adder_instance" "Adder" 3 22, 4 3 0, S_0x557fde9a5a40;
 .timescale 0 0;
    .port_info 0 /INPUT 4 "a";
    .port_info 1 /INPUT 4 "b";
    .port_info 2 /INPUT 1 "carry_in";
    .port_info 3 /OUTPUT 4 "sum";
    .port_info 4 /OUTPUT 1 "carry_out";
P_0x557fde9a5eb0 .param/l "WIDTH" 0 4 3, +C4<00000000000000000000000000000100>;
o0x7fe5549a0ba8 .functor BUFZ 1, C4<z>; HiZ drive
; Elide local net with no drivers, v0x557fde9aaa30_0 name=_ivl_22
o0x7fe5549a0bd8 .functor BUFZ 1, C4<z>; HiZ drive
; Elide local net with no drivers, v0x557fde9aab10_0 name=_ivl_25
v0x557fde9aabf0_0 .net8 "a", 3 0, RS_0x7fe5549a0c08;  alias, 2 drivers
v0x557fde9aacb0_0 .net "b", 3 0, L_0x557fde9af9f0;  1 drivers
v0x557fde9aad90_0 .net "carry", 3 0, L_0x557fde9b0300;  1 drivers
L_0x7fe554956180 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x557fde9aaec0_0 .net "carry_in", 0 0, L_0x7fe554956180;  1 drivers
v0x557fde9aafb0_0 .net8 "carry_out", 0 0, RS_0x7fe55499fcd8;  alias, 2 drivers
v0x557fde9ab050_0 .net "sum", 3 0, L_0x557fde9b0260;  1 drivers
L_0x557fde9ae580 .part RS_0x7fe5549a0c08, 0, 1;
L_0x557fde9ae6b0 .part L_0x557fde9af9f0, 0, 1;
L_0x557fde9aebc0 .part RS_0x7fe5549a0c08, 1, 1;
L_0x557fde9aed80 .part L_0x557fde9af9f0, 1, 1;
L_0x557fde9aeeb0 .part L_0x557fde9b0300, 0, 1;
L_0x557fde9af400 .part RS_0x7fe5549a0c08, 2, 1;
L_0x557fde9af570 .part L_0x557fde9af9f0, 2, 1;
L_0x557fde9af6a0 .part L_0x557fde9b0300, 1, 1;
L_0x557fde9b0260 .concat [ 1 1 1 1], L_0x557fde9ae2c0, L_0x557fde9ae8c0, L_0x557fde9af100, o0x7fe5549a0ba8;
L_0x557fde9b0300 .concat [ 1 1 1 1], L_0x557fde9ae510, L_0x557fde9aeb30, L_0x557fde9af370, o0x7fe5549a0bd8;
S_0x557fde9a6060 .scope generate, "bit_loop[0]" "bit_loop[0]" 4 14, 4 14 0, S_0x557fde9a5cd0;
 .timescale 0 0;
P_0x557fde9a6280 .param/l "i" 0 4 14, +C4<00>;
S_0x557fde9a6360 .scope module, "full_adder_instance" "Full_adder" 4 16, 5 5 0, S_0x557fde9a6060;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "carry_in";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "carry_out";
L_0x557fde9ae510 .functor OR 1, L_0x557fde9ae200, L_0x557fde9ae410, C4<0>, C4<0>;
v0x557fde9a7290_0 .net "a", 0 0, L_0x557fde9ae580;  1 drivers
v0x557fde9a7350_0 .net "b", 0 0, L_0x557fde9ae6b0;  1 drivers
v0x557fde9a7420_0 .net "carry_carry", 0 0, L_0x557fde9ae410;  1 drivers
v0x557fde9a7520_0 .net "carry_in", 0 0, L_0x7fe554956180;  alias, 1 drivers
v0x557fde9a75f0_0 .net "carry_out", 0 0, L_0x557fde9ae510;  1 drivers
v0x557fde9a76e0_0 .net "operands_carry", 0 0, L_0x557fde9ae200;  1 drivers
v0x557fde9a7780_0 .net "operands_sum", 0 0, L_0x557fde9ae0f0;  1 drivers
v0x557fde9a7870_0 .net "sum", 0 0, L_0x557fde9ae2c0;  1 drivers
S_0x557fde9a65f0 .scope module, "half_adder_carry" "Half_adder" 5 19, 6 3 0, S_0x557fde9a6360;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x557fde9ae2c0 .functor XOR 1, L_0x557fde9ae0f0, L_0x7fe554956180, C4<0>, C4<0>;
L_0x557fde9ae410 .functor AND 1, L_0x557fde9ae0f0, L_0x7fe554956180, C4<1>, C4<1>;
v0x557fde9a6890_0 .net "a", 0 0, L_0x557fde9ae0f0;  alias, 1 drivers
v0x557fde9a6970_0 .net "b", 0 0, L_0x7fe554956180;  alias, 1 drivers
v0x557fde9a6a30_0 .net "carry_out", 0 0, L_0x557fde9ae410;  alias, 1 drivers
v0x557fde9a6b00_0 .net "sum", 0 0, L_0x557fde9ae2c0;  alias, 1 drivers
S_0x557fde9a6c70 .scope module, "half_adder_operands" "Half_adder" 5 12, 6 3 0, S_0x557fde9a6360;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x557fde9ae0f0 .functor XOR 1, L_0x557fde9ae580, L_0x557fde9ae6b0, C4<0>, C4<0>;
L_0x557fde9ae200 .functor AND 1, L_0x557fde9ae580, L_0x557fde9ae6b0, C4<1>, C4<1>;
v0x557fde9a6ee0_0 .net "a", 0 0, L_0x557fde9ae580;  alias, 1 drivers
v0x557fde9a6fa0_0 .net "b", 0 0, L_0x557fde9ae6b0;  alias, 1 drivers
v0x557fde9a7060_0 .net "carry_out", 0 0, L_0x557fde9ae200;  alias, 1 drivers
v0x557fde9a7130_0 .net "sum", 0 0, L_0x557fde9ae0f0;  alias, 1 drivers
S_0x557fde9a7940 .scope generate, "bit_loop[1]" "bit_loop[1]" 4 14, 4 14 0, S_0x557fde9a5cd0;
 .timescale 0 0;
P_0x557fde9a7b40 .param/l "i" 0 4 14, +C4<01>;
S_0x557fde9a7c00 .scope module, "full_adder_instance" "Full_adder" 4 16, 5 5 0, S_0x557fde9a7940;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "carry_in";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "carry_out";
L_0x557fde9aeb30 .functor OR 1, L_0x557fde9ae850, L_0x557fde9aea50, C4<0>, C4<0>;
v0x557fde9a8b00_0 .net "a", 0 0, L_0x557fde9aebc0;  1 drivers
v0x557fde9a8bc0_0 .net "b", 0 0, L_0x557fde9aed80;  1 drivers
v0x557fde9a8c90_0 .net "carry_carry", 0 0, L_0x557fde9aea50;  1 drivers
v0x557fde9a8d90_0 .net "carry_in", 0 0, L_0x557fde9aeeb0;  1 drivers
v0x557fde9a8e60_0 .net "carry_out", 0 0, L_0x557fde9aeb30;  1 drivers
v0x557fde9a8f50_0 .net "operands_carry", 0 0, L_0x557fde9ae850;  1 drivers
v0x557fde9a8ff0_0 .net "operands_sum", 0 0, L_0x557fde9ae7e0;  1 drivers
v0x557fde9a90e0_0 .net "sum", 0 0, L_0x557fde9ae8c0;  1 drivers
S_0x557fde9a7e60 .scope module, "half_adder_carry" "Half_adder" 5 19, 6 3 0, S_0x557fde9a7c00;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x557fde9ae8c0 .functor XOR 1, L_0x557fde9ae7e0, L_0x557fde9aeeb0, C4<0>, C4<0>;
L_0x557fde9aea50 .functor AND 1, L_0x557fde9ae7e0, L_0x557fde9aeeb0, C4<1>, C4<1>;
v0x557fde9a8100_0 .net "a", 0 0, L_0x557fde9ae7e0;  alias, 1 drivers
v0x557fde9a81e0_0 .net "b", 0 0, L_0x557fde9aeeb0;  alias, 1 drivers
v0x557fde9a82a0_0 .net "carry_out", 0 0, L_0x557fde9aea50;  alias, 1 drivers
v0x557fde9a8370_0 .net "sum", 0 0, L_0x557fde9ae8c0;  alias, 1 drivers
S_0x557fde9a84e0 .scope module, "half_adder_operands" "Half_adder" 5 12, 6 3 0, S_0x557fde9a7c00;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x557fde9ae7e0 .functor XOR 1, L_0x557fde9aebc0, L_0x557fde9aed80, C4<0>, C4<0>;
L_0x557fde9ae850 .functor AND 1, L_0x557fde9aebc0, L_0x557fde9aed80, C4<1>, C4<1>;
v0x557fde9a8750_0 .net "a", 0 0, L_0x557fde9aebc0;  alias, 1 drivers
v0x557fde9a8810_0 .net "b", 0 0, L_0x557fde9aed80;  alias, 1 drivers
v0x557fde9a88d0_0 .net "carry_out", 0 0, L_0x557fde9ae850;  alias, 1 drivers
v0x557fde9a89a0_0 .net "sum", 0 0, L_0x557fde9ae7e0;  alias, 1 drivers
S_0x557fde9a91b0 .scope generate, "bit_loop[2]" "bit_loop[2]" 4 14, 4 14 0, S_0x557fde9a5cd0;
 .timescale 0 0;
P_0x557fde9a9390 .param/l "i" 0 4 14, +C4<010>;
S_0x557fde9a9450 .scope module, "full_adder_instance" "Full_adder" 4 16, 5 5 0, S_0x557fde9a91b0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "carry_in";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "carry_out";
L_0x557fde9af370 .functor OR 1, L_0x557fde9af070, L_0x557fde9af290, C4<0>, C4<0>;
v0x557fde9aa380_0 .net "a", 0 0, L_0x557fde9af400;  1 drivers
v0x557fde9aa440_0 .net "b", 0 0, L_0x557fde9af570;  1 drivers
v0x557fde9aa510_0 .net "carry_carry", 0 0, L_0x557fde9af290;  1 drivers
v0x557fde9aa610_0 .net "carry_in", 0 0, L_0x557fde9af6a0;  1 drivers
v0x557fde9aa6e0_0 .net "carry_out", 0 0, L_0x557fde9af370;  1 drivers
v0x557fde9aa7d0_0 .net "operands_carry", 0 0, L_0x557fde9af070;  1 drivers
v0x557fde9aa870_0 .net "operands_sum", 0 0, L_0x557fde9aefe0;  1 drivers
v0x557fde9aa960_0 .net "sum", 0 0, L_0x557fde9af100;  1 drivers
S_0x557fde9a96e0 .scope module, "half_adder_carry" "Half_adder" 5 19, 6 3 0, S_0x557fde9a9450;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x557fde9af100 .functor XOR 1, L_0x557fde9aefe0, L_0x557fde9af6a0, C4<0>, C4<0>;
L_0x557fde9af290 .functor AND 1, L_0x557fde9aefe0, L_0x557fde9af6a0, C4<1>, C4<1>;
v0x557fde9a9980_0 .net "a", 0 0, L_0x557fde9aefe0;  alias, 1 drivers
v0x557fde9a9a60_0 .net "b", 0 0, L_0x557fde9af6a0;  alias, 1 drivers
v0x557fde9a9b20_0 .net "carry_out", 0 0, L_0x557fde9af290;  alias, 1 drivers
v0x557fde9a9bf0_0 .net "sum", 0 0, L_0x557fde9af100;  alias, 1 drivers
S_0x557fde9a9d60 .scope module, "half_adder_operands" "Half_adder" 5 12, 6 3 0, S_0x557fde9a9450;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x557fde9aefe0 .functor XOR 1, L_0x557fde9af400, L_0x557fde9af570, C4<0>, C4<0>;
L_0x557fde9af070 .functor AND 1, L_0x557fde9af400, L_0x557fde9af570, C4<1>, C4<1>;
v0x557fde9a9fd0_0 .net "a", 0 0, L_0x557fde9af400;  alias, 1 drivers
v0x557fde9aa090_0 .net "b", 0 0, L_0x557fde9af570;  alias, 1 drivers
v0x557fde9aa150_0 .net "carry_out", 0 0, L_0x557fde9af070;  alias, 1 drivers
v0x557fde9aa220_0 .net "sum", 0 0, L_0x557fde9aefe0;  alias, 1 drivers
    .scope S_0x557fde96e450;
T_0 ;
    %end;
    .thread T_0;
    .scope S_0x557fde9755e0;
T_1 ;
    %vpi_call 2 20 "$display", "Testing 4bit Multiplier" {0 0 0};
    %vpi_call 2 21 "$display", "-------------------------------" {0 0 0};
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 25 "$display", "Test case 1: assert when a = 0000, b = 0000, result = 00000000" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 0, 0, 8;
    %jmp/0xz  T_1.0, 4;
    %vpi_call 2 26 "$display", "Failed. Expected sum: 00000000, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.0 ;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 30 "$display", "Test case 2: assert when a = 0100, b = 0000, result = 00000000" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 0, 0, 8;
    %jmp/0xz  T_1.2, 4;
    %vpi_call 2 31 "$display", "Failed. Expected sum: 00000000, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.2 ;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 1, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 35 "$display", "Test case 3: assert when a = 0100, b = 0001, result = 00000100" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 4, 0, 8;
    %jmp/0xz  T_1.4, 4;
    %vpi_call 2 36 "$display", "Failed. Expected sum: 00001000, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.4 ;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 2, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 40 "$display", "Test case 4: assert when a = 0100, b = 0101, result = 00001000" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 8, 0, 8;
    %jmp/0xz  T_1.6, 4;
    %vpi_call 2 41 "$display", "Failed. Expected sum: 00001000, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.6 ;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 45 "$display", "Test case 5: assert when a = 0100, b = 0101, result = 00010000" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 16, 0, 8;
    %jmp/0xz  T_1.8, 4;
    %vpi_call 2 46 "$display", "Failed. Expected sum: 00010000, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.8 ;
    %pushi/vec4 3, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 3, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 50 "$display", "Test case 6: assert when a = 0011, b = 0011, result = 00001001" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 9, 0, 8;
    %jmp/0xz  T_1.10, 4;
    %vpi_call 2 51 "$display", "Failed. Expected sum: 00001001, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.10 ;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 1, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 55 "$display", "Test case 7: assert when a = 1111, b = 0001, result = 00001111" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 15, 0, 8;
    %jmp/0xz  T_1.12, 4;
    %vpi_call 2 56 "$display", "Failed. Expected sum: 00001111, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.12 ;
    %pushi/vec4 9, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 9, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 60 "$display", "Test case 8: assert when a = 1001, b = 1001, result = 01100001" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 97, 0, 8;
    %jmp/0xz  T_1.14, 4;
    %vpi_call 2 61 "$display", "Failed. Expected sum: 01100001, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.14 ;
    %pushi/vec4 10, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 5, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 65 "$display", "Test case 9: assert when a = 1010, b = 0101, result = 01111110" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 126, 0, 8;
    %jmp/0xz  T_1.16, 4;
    %vpi_call 2 66 "$display", "Failed. Expected sum: 01111110, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.16 ;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 70 "$display", "Test case 10: assert when a = 1111, b = 1111, result = 11100001" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 225, 0, 8;
    %jmp/0xz  T_1.18, 4;
    %vpi_call 2 71 "$display", "Failed. Expected sum: 11100001, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.18 ;
    %pushi/vec4 6, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 2, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 75 "$display", "Test case 11: assert when a = 0110, b = 0010, result = 00001100" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 12, 0, 8;
    %jmp/0xz  T_1.20, 4;
    %vpi_call 2 76 "$display", "Failed. Expected sum: 00001100, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.20 ;
    %pushi/vec4 8, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 8, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 80 "$display", "Test case 12: assert when a = 1000, b = 1000, result = 01000000" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 64, 0, 8;
    %jmp/0xz  T_1.22, 4;
    %vpi_call 2 81 "$display", "Failed. Expected sum: 01000000, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.22 ;
    %pushi/vec4 12, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 3, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 85 "$display", "Test case 13: assert when a = 1100, b = 0011, result = 00101000" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 40, 0, 8;
    %jmp/0xz  T_1.24, 4;
    %vpi_call 2 86 "$display", "Failed. Expected sum: 00101000, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.24 ;
    %pushi/vec4 10, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 10, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 90 "$display", "Test case 14: assert when a = 1010, b = 1010, result = 01100100" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 100, 0, 8;
    %jmp/0xz  T_1.26, 4;
    %vpi_call 2 91 "$display", "Failed. Expected sum: 01100100, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.26 ;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x557fde9abc20_0, 0, 4;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x557fde9abce0_0, 0, 4;
    %delay 1, 0;
    %vpi_call 2 95 "$display", "Test case 15: assert when a = 1111, b = 0000, result = 00000000" {0 0 0};
    %load/vec4 v0x557fde9abdb0_0;
    %cmpi/ne 0, 0, 8;
    %jmp/0xz  T_1.28, 4;
    %vpi_call 2 96 "$display", "Failed. Expected sum: 00000000, Actual: %b", v0x557fde9abdb0_0 {0 0 0};
T_1.28 ;
    %vpi_call 2 97 "$finish" {0 0 0};
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 7;
    "N/A";
    "<interactive>";
    "multiplier.tb.v";
    "./../../src/common/multiplier.v";
    "./../../src/common/adder.v";
    "./../../src/common/full_adder.v";
    "./../../src/common/half_adder.v";
