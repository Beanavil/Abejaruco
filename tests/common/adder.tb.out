#! /usr/bin/vvp
:ivl_version "11.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
S_0x563226c7d750 .scope module, "Adder_tb" "Adder_tb" 2 9;
 .timescale 0 0;
v0x563226cba730_0 .var "a", 3 0;
v0x563226cba810_0 .var "b", 3 0;
v0x563226cba8b0_0 .var "carry_in", 0 0;
o0x7fcc246b8cd8 .functor BUFZ 1, C4<z>; HiZ drive
v0x563226cba980_0 .net "carry_out", 0 0, o0x7fcc246b8cd8;  0 drivers
v0x563226cbaa50_0 .net "sum", 3 0, L_0x563226cbc490;  1 drivers
S_0x563226c7ae80 .scope module, "adder_instance_4_bit" "Adder" 2 16, 3 3 0, S_0x563226c7d750;
 .timescale 0 0;
    .port_info 0 /INPUT 4 "a";
    .port_info 1 /INPUT 4 "b";
    .port_info 2 /INPUT 1 "carry_in";
    .port_info 3 /OUTPUT 4 "sum";
    .port_info 4 /OUTPUT 1 "carry_out";
P_0x563226c7ad20 .param/l "WIDTH" 0 3 3, +C4<00000000000000000000000000000100>;
o0x7fcc246b8be8 .functor BUFZ 1, C4<z>; HiZ drive
; Elide local net with no drivers, v0x563226cb9f70_0 name=_ivl_22
o0x7fcc246b8c18 .functor BUFZ 1, C4<z>; HiZ drive
; Elide local net with no drivers, v0x563226cba050_0 name=_ivl_25
v0x563226cba130_0 .net "a", 3 0, v0x563226cba730_0;  1 drivers
v0x563226cba1f0_0 .net "b", 3 0, v0x563226cba810_0;  1 drivers
v0x563226cba2d0_0 .net "carry", 3 0, L_0x563226cbc3f0;  1 drivers
v0x563226cba400_0 .net "carry_in", 0 0, v0x563226cba8b0_0;  1 drivers
v0x563226cba4f0_0 .net "carry_out", 0 0, o0x7fcc246b8cd8;  alias, 0 drivers
v0x563226cba5b0_0 .net "sum", 3 0, L_0x563226cbc490;  alias, 1 drivers
L_0x563226cbafc0 .part v0x563226cba730_0, 0, 1;
L_0x563226cbb110 .part v0x563226cba810_0, 0, 1;
L_0x563226cbb720 .part v0x563226cba730_0, 1, 1;
L_0x563226cbb850 .part v0x563226cba810_0, 1, 1;
L_0x563226cbb980 .part L_0x563226cbc3f0, 0, 1;
L_0x563226cbbeb0 .part v0x563226cba730_0, 2, 1;
L_0x563226cbc0b0 .part v0x563226cba810_0, 2, 1;
L_0x563226cbc270 .part L_0x563226cbc3f0, 1, 1;
L_0x563226cbc3f0 .concat [ 1 1 1 1], L_0x563226cbaf30, L_0x563226cbb690, L_0x563226cbbe20, o0x7fcc246b8be8;
L_0x563226cbc490 .concat [ 1 1 1 1], L_0x563226cbad10, L_0x563226cbb420, L_0x563226cbbbb0, o0x7fcc246b8c18;
S_0x563226c86c70 .scope generate, "bit_loop[0]" "bit_loop[0]" 3 14, 3 14 0, S_0x563226c7ae80;
 .timescale 0 0;
P_0x563226c7e2d0 .param/l "i" 0 3 14, +C4<00>;
S_0x563226c86e00 .scope module, "full_adder_instance" "Full_adder" 3 16, 4 5 0, S_0x563226c86c70;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "carry_in";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "carry_out";
L_0x563226cbaf30 .functor OR 1, L_0x563226cbac50, L_0x563226cbaea0, C4<0>, C4<0>;
v0x563226cb67d0_0 .net "a", 0 0, L_0x563226cbafc0;  1 drivers
v0x563226cb6890_0 .net "b", 0 0, L_0x563226cbb110;  1 drivers
v0x563226cb6960_0 .net "carry_carry", 0 0, L_0x563226cbaea0;  1 drivers
v0x563226cb6a60_0 .net "carry_in", 0 0, v0x563226cba8b0_0;  alias, 1 drivers
v0x563226cb6b30_0 .net "carry_out", 0 0, L_0x563226cbaf30;  1 drivers
v0x563226cb6c20_0 .net "operands_carry", 0 0, L_0x563226cbac50;  1 drivers
v0x563226cb6cc0_0 .net "operands_sum", 0 0, L_0x563226cbab40;  1 drivers
v0x563226cb6db0_0 .net "sum", 0 0, L_0x563226cbad10;  1 drivers
S_0x563226c86f90 .scope module, "half_adder_carry" "Half_adder" 4 19, 5 3 0, S_0x563226c86e00;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x563226cbad10 .functor XOR 1, L_0x563226cbab40, v0x563226cba8b0_0, C4<0>, C4<0>;
L_0x563226cbaea0 .functor AND 1, L_0x563226cbab40, v0x563226cba8b0_0, C4<1>, C4<1>;
v0x563226c7e460_0 .net "a", 0 0, L_0x563226cbab40;  alias, 1 drivers
v0x563226c7e1a0_0 .net "b", 0 0, v0x563226cba8b0_0;  alias, 1 drivers
v0x563226c7b8d0_0 .net "carry_out", 0 0, L_0x563226cbaea0;  alias, 1 drivers
v0x563226c78f80_0 .net "sum", 0 0, L_0x563226cbad10;  alias, 1 drivers
S_0x563226cb6400 .scope module, "half_adder_operands" "Half_adder" 4 12, 5 3 0, S_0x563226c86e00;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x563226cbab40 .functor XOR 1, L_0x563226cbafc0, L_0x563226cbb110, C4<0>, C4<0>;
L_0x563226cbac50 .functor AND 1, L_0x563226cbafc0, L_0x563226cbb110, C4<1>, C4<1>;
v0x563226c7bb90_0 .net "a", 0 0, L_0x563226cbafc0;  alias, 1 drivers
v0x563226c79290_0 .net "b", 0 0, L_0x563226cbb110;  alias, 1 drivers
v0x563226c7fcf0_0 .net "carry_out", 0 0, L_0x563226cbac50;  alias, 1 drivers
v0x563226cb6670_0 .net "sum", 0 0, L_0x563226cbab40;  alias, 1 drivers
S_0x563226cb6e80 .scope generate, "bit_loop[1]" "bit_loop[1]" 3 14, 3 14 0, S_0x563226c7ae80;
 .timescale 0 0;
P_0x563226cb7080 .param/l "i" 0 3 14, +C4<01>;
S_0x563226cb7140 .scope module, "full_adder_instance" "Full_adder" 3 16, 4 5 0, S_0x563226cb6e80;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "carry_in";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "carry_out";
L_0x563226cbb690 .functor OR 1, L_0x563226cbb340, L_0x563226cbb5b0, C4<0>, C4<0>;
v0x563226cb8040_0 .net "a", 0 0, L_0x563226cbb720;  1 drivers
v0x563226cb8100_0 .net "b", 0 0, L_0x563226cbb850;  1 drivers
v0x563226cb81d0_0 .net "carry_carry", 0 0, L_0x563226cbb5b0;  1 drivers
v0x563226cb82d0_0 .net "carry_in", 0 0, L_0x563226cbb980;  1 drivers
v0x563226cb83a0_0 .net "carry_out", 0 0, L_0x563226cbb690;  1 drivers
v0x563226cb8490_0 .net "operands_carry", 0 0, L_0x563226cbb340;  1 drivers
v0x563226cb8530_0 .net "operands_sum", 0 0, L_0x563226cbb240;  1 drivers
v0x563226cb8620_0 .net "sum", 0 0, L_0x563226cbb420;  1 drivers
S_0x563226cb73a0 .scope module, "half_adder_carry" "Half_adder" 4 19, 5 3 0, S_0x563226cb7140;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x563226cbb420 .functor XOR 1, L_0x563226cbb240, L_0x563226cbb980, C4<0>, C4<0>;
L_0x563226cbb5b0 .functor AND 1, L_0x563226cbb240, L_0x563226cbb980, C4<1>, C4<1>;
v0x563226cb7640_0 .net "a", 0 0, L_0x563226cbb240;  alias, 1 drivers
v0x563226cb7720_0 .net "b", 0 0, L_0x563226cbb980;  alias, 1 drivers
v0x563226cb77e0_0 .net "carry_out", 0 0, L_0x563226cbb5b0;  alias, 1 drivers
v0x563226cb78b0_0 .net "sum", 0 0, L_0x563226cbb420;  alias, 1 drivers
S_0x563226cb7a20 .scope module, "half_adder_operands" "Half_adder" 4 12, 5 3 0, S_0x563226cb7140;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x563226cbb240 .functor XOR 1, L_0x563226cbb720, L_0x563226cbb850, C4<0>, C4<0>;
L_0x563226cbb340 .functor AND 1, L_0x563226cbb720, L_0x563226cbb850, C4<1>, C4<1>;
v0x563226cb7c90_0 .net "a", 0 0, L_0x563226cbb720;  alias, 1 drivers
v0x563226cb7d50_0 .net "b", 0 0, L_0x563226cbb850;  alias, 1 drivers
v0x563226cb7e10_0 .net "carry_out", 0 0, L_0x563226cbb340;  alias, 1 drivers
v0x563226cb7ee0_0 .net "sum", 0 0, L_0x563226cbb240;  alias, 1 drivers
S_0x563226cb86f0 .scope generate, "bit_loop[2]" "bit_loop[2]" 3 14, 3 14 0, S_0x563226c7ae80;
 .timescale 0 0;
P_0x563226cb88d0 .param/l "i" 0 3 14, +C4<010>;
S_0x563226cb8990 .scope module, "full_adder_instance" "Full_adder" 3 16, 4 5 0, S_0x563226cb86f0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "carry_in";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "carry_out";
L_0x563226cbbe20 .functor OR 1, L_0x563226cbbb20, L_0x563226cbbd40, C4<0>, C4<0>;
v0x563226cb98c0_0 .net "a", 0 0, L_0x563226cbbeb0;  1 drivers
v0x563226cb9980_0 .net "b", 0 0, L_0x563226cbc0b0;  1 drivers
v0x563226cb9a50_0 .net "carry_carry", 0 0, L_0x563226cbbd40;  1 drivers
v0x563226cb9b50_0 .net "carry_in", 0 0, L_0x563226cbc270;  1 drivers
v0x563226cb9c20_0 .net "carry_out", 0 0, L_0x563226cbbe20;  1 drivers
v0x563226cb9d10_0 .net "operands_carry", 0 0, L_0x563226cbbb20;  1 drivers
v0x563226cb9db0_0 .net "operands_sum", 0 0, L_0x563226cbbab0;  1 drivers
v0x563226cb9ea0_0 .net "sum", 0 0, L_0x563226cbbbb0;  1 drivers
S_0x563226cb8c20 .scope module, "half_adder_carry" "Half_adder" 4 19, 5 3 0, S_0x563226cb8990;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x563226cbbbb0 .functor XOR 1, L_0x563226cbbab0, L_0x563226cbc270, C4<0>, C4<0>;
L_0x563226cbbd40 .functor AND 1, L_0x563226cbbab0, L_0x563226cbc270, C4<1>, C4<1>;
v0x563226cb8ec0_0 .net "a", 0 0, L_0x563226cbbab0;  alias, 1 drivers
v0x563226cb8fa0_0 .net "b", 0 0, L_0x563226cbc270;  alias, 1 drivers
v0x563226cb9060_0 .net "carry_out", 0 0, L_0x563226cbbd40;  alias, 1 drivers
v0x563226cb9130_0 .net "sum", 0 0, L_0x563226cbbbb0;  alias, 1 drivers
S_0x563226cb92a0 .scope module, "half_adder_operands" "Half_adder" 4 12, 5 3 0, S_0x563226cb8990;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "carry_out";
L_0x563226cbbab0 .functor XOR 1, L_0x563226cbbeb0, L_0x563226cbc0b0, C4<0>, C4<0>;
L_0x563226cbbb20 .functor AND 1, L_0x563226cbbeb0, L_0x563226cbc0b0, C4<1>, C4<1>;
v0x563226cb9510_0 .net "a", 0 0, L_0x563226cbbeb0;  alias, 1 drivers
v0x563226cb95d0_0 .net "b", 0 0, L_0x563226cbc0b0;  alias, 1 drivers
v0x563226cb9690_0 .net "carry_out", 0 0, L_0x563226cbbb20;  alias, 1 drivers
v0x563226cb9760_0 .net "sum", 0 0, L_0x563226cbbab0;  alias, 1 drivers
    .scope S_0x563226c7d750;
T_0 ;
    %vpi_call 2 25 "$display", "Testing 4bit Adder" {0 0 0};
    %vpi_call 2 26 "$display", "-------------------------------" {0 0 0};
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x563226cba730_0, 0, 4;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x563226cba810_0, 0, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x563226cba8b0_0, 0, 1;
    %delay 1, 0;
    %vpi_call 2 33 "$display", "Test case 1: assert when a = 0000, b = 0000, carry_in = 0, sum = 0000, carry_out = 0" {0 0 0};
    %load/vec4 v0x563226cbaa50_0;
    %cmpi/ne 0, 0, 4;
    %jmp/0xz  T_0.0, 4;
    %vpi_call 2 34 "$display", "Failed. Expected sum: 0000, Actual: %b", v0x563226cbaa50_0 {0 0 0};
T_0.0 ;
    %load/vec4 v0x563226cba980_0;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_0.2, 4;
    %vpi_call 2 35 "$display", "Failed. Expected carry_out: 0, Actual: %b", v0x563226cba980_0 {0 0 0};
T_0.2 ;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x563226cba730_0, 0, 4;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x563226cba810_0, 0, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x563226cba8b0_0, 0, 1;
    %delay 1, 0;
    %vpi_call 2 39 "$display", "Test case 2: assert when a = 0100, b = 0000, carry_in = 0, sum = 0100, carry_out = 0" {0 0 0};
    %load/vec4 v0x563226cbaa50_0;
    %cmpi/ne 4, 0, 4;
    %jmp/0xz  T_0.4, 4;
    %vpi_call 2 40 "$display", "Failed. Expected sum: 0100, Actual: %b", v0x563226cbaa50_0 {0 0 0};
T_0.4 ;
    %load/vec4 v0x563226cba980_0;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_0.6, 4;
    %vpi_call 2 41 "$display", "Failed. Expected carry_out: 0, Actual: %b", v0x563226cba980_0 {0 0 0};
T_0.6 ;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x563226cba730_0, 0, 4;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x563226cba810_0, 0, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x563226cba8b0_0, 0, 1;
    %delay 1, 0;
    %vpi_call 2 45 "$display", "Test case 3: assert when a = 0100, b = 0100, carry_in = 0, sum = 1000, carry_out = 0" {0 0 0};
    %load/vec4 v0x563226cbaa50_0;
    %cmpi/ne 8, 0, 4;
    %jmp/0xz  T_0.8, 4;
    %vpi_call 2 46 "$display", "Failed. Expected sum: 1000, Actual: %b", v0x563226cbaa50_0 {0 0 0};
T_0.8 ;
    %load/vec4 v0x563226cba980_0;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_0.10, 4;
    %vpi_call 2 47 "$display", "Failed. Expected carry_out: 0, Actual: %b", v0x563226cba980_0 {0 0 0};
T_0.10 ;
    %pushi/vec4 8, 0, 4;
    %store/vec4 v0x563226cba730_0, 0, 4;
    %pushi/vec4 8, 0, 4;
    %store/vec4 v0x563226cba810_0, 0, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x563226cba8b0_0, 0, 1;
    %delay 1, 0;
    %vpi_call 2 51 "$display", "Test case 4: assert when a = 1000, b = 1000, carry_in = 0, sum = 0000, carry_out = 1" {0 0 0};
    %load/vec4 v0x563226cbaa50_0;
    %cmpi/ne 0, 0, 4;
    %jmp/0xz  T_0.12, 4;
    %vpi_call 2 52 "$display", "Failed. Expected sum: 0000, Actual: %b", v0x563226cbaa50_0 {0 0 0};
T_0.12 ;
    %load/vec4 v0x563226cba980_0;
    %pad/u 32;
    %cmpi/ne 1, 0, 32;
    %jmp/0xz  T_0.14, 4;
    %vpi_call 2 53 "$display", "Failed. Expected carry_out: 0, Actual: %b", v0x563226cba980_0 {0 0 0};
T_0.14 ;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x563226cba730_0, 0, 4;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x563226cba810_0, 0, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x563226cba8b0_0, 0, 1;
    %delay 1, 0;
    %vpi_call 2 57 "$display", "Test case 5: assert when a = 0000, b = 0000, carry_in = 1, sum = 0001, carry_out = 0" {0 0 0};
    %load/vec4 v0x563226cbaa50_0;
    %cmpi/ne 1, 0, 4;
    %jmp/0xz  T_0.16, 4;
    %vpi_call 2 58 "$display", "Failed. Expected sum: 0001, Actual: %b", v0x563226cbaa50_0 {0 0 0};
T_0.16 ;
    %load/vec4 v0x563226cba980_0;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_0.18, 4;
    %vpi_call 2 59 "$display", "Failed. Expected carry_out: 0, Actual: %b", v0x563226cba980_0 {0 0 0};
T_0.18 ;
    %pushi/vec4 1, 0, 4;
    %store/vec4 v0x563226cba730_0, 0, 4;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x563226cba810_0, 0, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x563226cba8b0_0, 0, 1;
    %delay 1, 0;
    %vpi_call 2 63 "$display", "Test case 6: assert when a = 0001, b = 0000, carry_in = 1, sum = 0010, carry_out = 0" {0 0 0};
    %load/vec4 v0x563226cbaa50_0;
    %cmpi/ne 2, 0, 4;
    %jmp/0xz  T_0.20, 4;
    %vpi_call 2 64 "$display", "Failed. Expected sum: 0001, Actual: %b", v0x563226cbaa50_0 {0 0 0};
T_0.20 ;
    %load/vec4 v0x563226cba980_0;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_0.22, 4;
    %vpi_call 2 65 "$display", "Failed. Expected carry_out: 0, Actual: %b", v0x563226cba980_0 {0 0 0};
T_0.22 ;
    %vpi_call 2 66 "$finish" {0 0 0};
    %end;
    .thread T_0;
# The file index is used to find the file name in the following table.
:file_names 6;
    "N/A";
    "<interactive>";
    "adder.tb.v";
    "./../../src/common/adder.v";
    "./../../src/common/full_adder.v";
    "./../../src/common/half_adder.v";
